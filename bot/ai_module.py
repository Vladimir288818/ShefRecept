import os
import logging
from openai import AsyncOpenAI
from telegram.ext import CommandHandler, MessageHandler, filters
from typing import Optional

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI
client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

async def get_openai_response(prompt: str) -> Optional[str]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç OpenAI API
    
    Args:
        prompt: –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        Optional[str]: –û—Ç–≤–µ—Ç –æ—Ç API –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    try:
        completion = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –≤–µ—Å–µ–ª—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é –∏ –∫—É–ª–∏–Ω–∞—Ä–∏–∏."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1000,
            temperature=0.7
        )
        logger.info("Successfully received OpenAI response")
        return completion.choices[0].message.content

    except Exception as e:
        logger.error(f"OpenAI API error: {e}")
        return None

async def get_recipe_with_calories(prompt: str) -> Optional[str]:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–ª–æ—Ä–∏—è—Ö
    
    Args:
        prompt: –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        Optional[str]: –†–µ—Ü–µ–ø—Ç —Å –∫–∞–ª–æ—Ä–∏—è–º–∏ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    system_message = """–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–≤–∞—Ä, –∑–Ω–∞—é—â–∏–π –∫—É—Ö–Ω—é –≤—Å–µ–≥–æ –º–∏—Ä–∞! 
    –¢—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—à—å—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç, 
    –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –µ–≥–æ –∑–∞–ø—Ä–æ—Å—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, —Ç–∏–ø –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ –∏–ª–∏ 
    –æ—Å–æ–±—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è, —Ç–∞–∫–∏–µ –∫–∞–∫ –Ω–∏–∑–∫–æ–∫–∞–ª–æ—Ä–∏–π–Ω–æ–µ –∏–ª–∏ –≤–µ–≥–∞–Ω—Å–∫–æ–µ –±–ª—é–¥–æ). 
    
    –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω—ã–º, —Å —á–µ—Ç–∫–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤, –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏ 
    –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏. –ù–∞—á–∏–Ω–∞–π –æ—Ç–≤–µ—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥–∞. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 
    –Ω–µ —É–∫–∞–∑–∞–ª –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π, –ø—Ä–µ–¥–ª–æ–∂–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç. 
    
    –ù–µ –¥–æ–±–∞–≤–ª—è–π —Å–æ–≤–µ—Ç—ã –∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Ç–æ–ª—å–∫–æ —Å–∞–º —Ä–µ—Ü–µ–ø—Ç.
    
    –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
    
    –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
    
    –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:
    - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç 1, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç 2, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    
    –ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å:
    - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π: XXX –∫–∫–∞–ª
    - –ë–µ–ª–∫–∏: XX –≥
    - –ñ–∏—Ä—ã: XX –≥
    - –£–≥–ª–µ–≤–æ–¥—ã: XX –≥
    
    –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:
    1. –®–∞–≥ 1
    2. –®–∞–≥ 2
    ..."""

    try:
        completion = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": system_message},
                {"role": "user", "content": prompt}
            ],
            max_tokens=1000,
            temperature=0.7
        )
        return completion.choices[0].message.content
    except Exception as e:
        logger.error(f"Error generating recipe: {e}")
        return None

async def categories(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /categories"""
    categories_message = """
    üç≥ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤:
    
    üåÖ –ó–∞–≤—Ç—Ä–∞–∫
    ‚Ä¢ –ö–∞—à–∏ –∏ —Ö–ª–æ–ø—å—è
    ‚Ä¢ –Ø–∏—á–Ω—ã–µ –±–ª—é–¥–∞
    ‚Ä¢ –ë—É—Ç–µ—Ä–±—Ä–æ–¥—ã –∏ —Å—ç–Ω–¥–≤–∏—á–∏
    
    üåû –û–±–µ–¥
    ‚Ä¢ –°—É–ø—ã
    ‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞
    ‚Ä¢ –ì–∞—Ä–Ω–∏—Ä—ã
    
    üåô –£–∂–∏–Ω
    ‚Ä¢ –õ–µ–≥–∫–∏–µ –±–ª—é–¥–∞
    ‚Ä¢ –°–∞–ª–∞—Ç—ã
    ‚Ä¢ –ó–∞–ø–µ–∫–∞–Ω–∫–∏
    
    –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å!
    """
    await update.message.reply_text(categories_message)
    logger.info("Sent categories information")

async def handle_text(update, context):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_message = update.message.text
    prompt = f"–ü—Ä–µ–¥–ª–æ–∂–∏ —Ä–µ—Ü–µ–ø—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å '{user_message}', –∏ —É–∫–∞–∂–∏ –µ–≥–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å."
    
    response = await get_recipe_with_calories(prompt)
    
    if not response:
        await update.message.reply_text(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
        )
        return
        
    await update.message.reply_text(response)

def init_ai_assistant(application):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI-—Å–æ–≤–µ—Ç–Ω–∏–∫–∞"""
    application.add_handler(CommandHandler("categories", categories))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    logger.info("–ú–æ–¥—É–ª—å AI-—Å–æ–≤–µ—Ç–Ω–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")